

<div class="row">
  <div class="col s12">
    <div class="input-field">
      <input id="js-user-name-fuzzy" type="text" class="validate" placeholder="Enter the details of the user" autofocus>
    </div>
  </div>
</div>

<div class="row">
  <table class="highlight">
    <thead>
      <tr>
        <th colspan="4" class="center">Full Name</th>
        <th colspan="2" class="center">Username</th>
        <th colspan="2" class="center">Mobile Number</th>
        <th colspan="1" class="center">Email</th>
        <th colspan="1" class="center">Gender</th>
        <th colspan="1" class="center">Requests made</th>
        <th colspan="1" class="center">Orders made</th>
        <th colspan="1" class="center">Chat</th>
        <th colspan="1" class="center">Message Count</th>
    </thead>
    <tbody>
      <% users.each do |user| %>
        <tr id="js-data-row">
          <td colspan="4" class="center"><%= link_to user.full_name.titleize, support_user_path(user) %></td>

          <td colspan="2" class="center">
            <%= user.username %>
          </td>

          <td colspan="2" class="center"><%= user.mobile_number %></td>

          <td colspan="1" class="center">
            <%= user.email %>
          </td>

          <td colspan="1" class="center">
            <%= user.gender %>
          </td>

          <td colspan="1" class="center">
            <%= user.requests.size %>
          </td>

          <td colspan="1" class="center">
            <%= user.orders.size %>
          </td>

          <td colspan="1" class="center">
            <%= link_to 'Chat',
              chat_path(Conversation.where(receiver_type:"support_on_general", conversationable_id:user, conversationable_type: "User" ).first.id), 
              :onclick=>"window.open(this.href,'chat', 'height=500, width=500');return false;" rescue nil
            %>
          </td>

          <td colspan="1" class="center">
            <% if Support.as_json(user).pluck(:message_count) == [nil]  %>
              0
            <% else %>
              <%= Support.as_json(user).pluck(:message_count).inject(0){|sum,x| sum + x } %>
            <% end %>
          </td>

        </tr>
      <% end %>
    </tbody>
  </table>
</div>
